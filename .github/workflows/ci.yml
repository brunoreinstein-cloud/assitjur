name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - run: npm run lint

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - run: npm run test

  build:
    runs-on: ubuntu-latest
    env:
      VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL || 'https://placeholder.supabase.co' }}
      VITE_SUPABASE_PUBLISHABLE_KEY: ${{ secrets.VITE_SUPABASE_PUBLISHABLE_KEY || 'placeholder-key' }}
      VITE_DEFAULT_ORG: ${{ secrets.VITE_DEFAULT_ORG }}
      VITE_INACTIVITY_TIMEOUT_MINUTES: ${{ secrets.VITE_INACTIVITY_TIMEOUT_MINUTES }}
      VITE_ALLOWED_ORIGINS: ${{ secrets.VITE_ALLOWED_ORIGINS }}
      VITE_EXTRA_ORIGINS: ${{ secrets.VITE_EXTRA_ORIGINS }}
      VITE_PUBLIC_SITE_URL: ${{ secrets.VITE_PUBLIC_SITE_URL }}
      VITE_FEATURE_FLAGS_REFRESH_INTERVAL: ${{ secrets.VITE_FEATURE_FLAGS_REFRESH_INTERVAL }}
      VITE_FEATURE_FLAGS_CACHE_TTL: ${{ secrets.VITE_FEATURE_FLAGS_CACHE_TTL }}
      VITE_MAINTENANCE: ${{ secrets.VITE_MAINTENANCE }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - name: Check required Vite env vars
        run: |
          test -n "$VITE_SUPABASE_URL"
          test -n "$VITE_SUPABASE_PUBLISHABLE_KEY"
          test -n "$VITE_DEFAULT_ORG"
          test -n "$VITE_INACTIVITY_TIMEOUT_MINUTES"
          test -n "$VITE_ALLOWED_ORIGINS"
          test -n "$VITE_EXTRA_ORIGINS"
          test -n "$VITE_PUBLIC_SITE_URL"
          test -n "$VITE_FEATURE_FLAGS_REFRESH_INTERVAL"
          test -n "$VITE_FEATURE_FLAGS_CACHE_TTL"
          test -n "$VITE_MAINTENANCE"
      - name: Build
        run: |
          set -o pipefail
          ts=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          echo "timestamp: $ts" > build.log
          echo "commit: $GITHUB_SHA" >> build.log
          echo "ref: $GITHUB_REF_NAME" >> build.log
          export VITE_PREVIEW_TIMESTAMP=$ts
          npm run build |& tee -a build.log
      - name: Upload dist
        uses: actions/upload-artifact@v3
        with:
          name: preview-dist
          path: dist
      - name: Smoke preview
        run: npm run preview -- --port=5000 &
      - name: Wait for preview
        run: curl --retry 5 --retry-delay 5 http://localhost:5000 || exit 1
      - name: Upload build log
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: build-log
          path: build.log

  smoke-edge:
    runs-on: ubuntu-latest
    if: ${{ secrets.FUNCTION_URL != '' && secrets.ANON_KEY != '' && secrets.JWT != '' }}
    steps:
      - uses: actions/checkout@v3
      - run: ./scripts/smoke-edge.sh
        env:
          FUNCTION_URL: ${{ secrets.FUNCTION_URL }}
          ANON_KEY: ${{ secrets.ANON_KEY }}
          JWT: ${{ secrets.JWT }}
