#!/usr/bin/env node

/**
 * Limpeza agressiva de cache para for√ßar rebuild completo
 * Inclui: Vite, TypeScript, Node modules, Edge Functions
 */

import { existsSync, rmSync, writeFileSync } from 'fs';
import { join } from 'path';
import { execSync } from 'child_process';

const cacheDirs = [
  'node_modules/.vite',
  'node_modules/.cache',
  'node_modules/.tmp',
  '.vite',
  'dist',
  '.turbo',
  '.next',
  '.swc',
  'tsconfig.tsbuildinfo',
];

console.log('üî• LIMPEZA AGRESSIVA DE CACHE INICIADA...\n');
console.log('Esta opera√ß√£o vai limpar TODOS os caches do projeto.\n');

// 1. Limpar diret√≥rios de cache
console.log('üìÅ Limpando diret√≥rios de cache...');
cacheDirs.forEach(dir => {
  const fullPath = join(process.cwd(), dir);
  if (existsSync(fullPath)) {
    try {
      rmSync(fullPath, { recursive: true, force: true });
      console.log(`  ‚úÖ Removido: ${dir}`);
    } catch (error) {
      console.log(`  ‚ö†Ô∏è  Erro ao remover ${dir}:`, error.message);
    }
  } else {
    console.log(`  ‚è≠Ô∏è  N√£o encontrado: ${dir}`);
  }
});

// 2. Limpar cache do npm/pnpm/yarn
console.log('\nüì¶ Limpando cache de gerenciadores de pacotes...');
try {
  execSync('npm cache clean --force', { stdio: 'inherit' });
  console.log('  ‚úÖ Cache do npm limpo');
} catch (error) {
  console.log('  ‚ö†Ô∏è  Erro ao limpar cache do npm');
}

// 3. Criar marker file para for√ßar rebuild de Edge Functions
console.log('\n‚ö° Criando marker para rebuild de Edge Functions...');
const markerPath = join(process.cwd(), 'supabase', 'functions', '.force-rebuild');
try {
  writeFileSync(markerPath, `Rebuild for√ßado em: ${new Date().toISOString()}`);
  console.log('  ‚úÖ Marker criado para for√ßar rebuild');
} catch (error) {
  console.log('  ‚ö†Ô∏è  Erro ao criar marker:', error.message);
}

// 4. Instru√ß√µes finais
console.log('\n‚ú® LIMPEZA CONCLU√çDA!\n');
console.log('üìã PR√ìXIMOS PASSOS:');
console.log('  1. Execute: npm install (para garantir integridade dos pacotes)');
console.log('  2. Execute: npm run dev (para rebuild completo)');
console.log('  3. Aguarde o build finalizar antes de testar');
console.log('\nüîç VERIFICA√á√ÉO:');
console.log('  - Console de dev: verifique se h√° logs "[DEBUG]" nas Edge Functions');
console.log('  - Network tab: verifique se as RPCs retornam dados com "confidence"');
console.log('  - UI: busque por "FABIANO CELESTINO" e verifique os campos\n');
